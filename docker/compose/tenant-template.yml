version: '3.8'

networks:
  public:
    external: true
  tenant_TENANT_ID:
    driver: bridge
    internal: true
    ipam:
      driver: default
      config:
        - subnet: SUBNET_CIDR

volumes:
  n8n_data_TENANT_ID:
  postgres_data_TENANT_ID:
  redis_data_TENANT_ID:

services:
  # N8N Instance
  n8n-TENANT_ID:
    image: n8nio/n8n:latest
    container_name: n8n-tenant-TENANT_ID
    restart: unless-stopped
    networks:
      - public
      - tenant_TENANT_ID
    environment:
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_HOST=SUBDOMAIN.app.bythewise.com
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://SUBDOMAIN.app.bythewise.com
      - GENERIC_TIMEZONE=Europe/Paris
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres-TENANT_ID
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=POSTGRES_PASSWORD
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis-TENANT_ID
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=REDIS_PASSWORD
      - N8N_METRICS=true
      - N8N_LOG_LEVEL=info
    volumes:
      - n8n_data_TENANT_ID:/home/node/.n8n
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n-TENANT_ID.rule=Host(`SUBDOMAIN.app.bythewise.com`)"
      - "traefik.http.routers.n8n-TENANT_ID.entrypoints=websecure"
      - "traefik.http.routers.n8n-TENANT_ID.tls=true"
      - "traefik.http.routers.n8n-TENANT_ID.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n-TENANT_ID.loadbalancer.server.port=5678"
      - "tenant_id=TENANT_ID"
      - "tenant_name=TENANT_NAME"
      - "tenant_plan=TENANT_PLAN"
    depends_on:
      postgres-TENANT_ID:
        condition: service_healthy
      redis-TENANT_ID:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL pour N8N
  postgres-TENANT_ID:
    image: postgres:15-alpine
    container_name: postgres-tenant-TENANT_ID
    restart: unless-stopped
    networks:
      - tenant_TENANT_ID
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=POSTGRES_PASSWORD
      - POSTGRES_INITDB_ARGS=-E UTF8
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_TENANT_ID:/var/lib/postgresql/data
    labels:
      - "tenant_id=TENANT_ID"
      - "tenant_name=TENANT_NAME"
      - "service=postgres"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis pour N8N Queue
  redis-TENANT_ID:
    image: redis:7-alpine
    container_name: redis-tenant-TENANT_ID
    restart: unless-stopped
    networks:
      - tenant_TENANT_ID
    command: redis-server --appendonly yes --requirepass REDIS_PASSWORD
    volumes:
      - redis_data_TENANT_ID:/data
    labels:
      - "tenant_id=TENANT_ID"
      - "tenant_name=TENANT_NAME"
      - "service=redis"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
